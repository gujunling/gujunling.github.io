(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{465:function(s,n,a){"use strict";a.r(n);var r=a(7),t=Object(r.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"_1-稀疏数组的引入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-稀疏数组的引入"}},[s._v("#")]),s._v(" 1. 稀疏数组的引入")]),s._v(" "),n("p",[s._v("当数组中大部分的内容值都未被使用（或都为零），在数组中仅有少部分的空间使用，造成内存空间的浪费。为了节省内存空间，并且不影响数组中原有的内容值，我们可以使用稀疏数组去压缩数据。")]),s._v(" "),n("h2",{attrs:{id:"_2-稀疏数组的描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-稀疏数组的描述"}},[s._v("#")]),s._v(" 2.稀疏数组的描述")]),s._v(" "),n("p",[s._v("稀疏数组的处理方法是:")]),s._v(" "),n("ol",[n("li",[s._v("记录数组一共有几行几列，有多少个不同的值。")]),s._v(" "),n("li",[s._v("把具有不同值的元素的行列及值记录在一个小规模的数组中，从而缩小程序的规模")])]),s._v(" "),n("p",[s._v("稀疏数组共有 3 列，第一行记录的是原数组的行数，列数，有效数据的个数")]),s._v(" "),n("h2",{attrs:{id:"分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分析"}},[s._v("#")]),s._v(" 分析")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gujunling.github.io/images/4efea776c88744fe9a2f2bbfcb79a683.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"代码实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[s._v("#")]),s._v(" 代码实现")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    public class sparsearraytest1 {\n\n        public static void main(String[] args) {\n\n            //创建一个原始的二维数组  11 *  11\n            // 0表示没有棋子，1表示黑子，2表示蓝子\n            int chessArr1[][] = new int[11][11];\n            chessArr1[1][2] = 1;\n            chessArr1[2][3] = 2;\n            chessArr1[4][5] = 2;\n            //输出原始的二维数组\n            System.out.println("原始的二维数组为：");\n            for (int[] row : chessArr1) {\n                for (int data : row) {\n                    System.out.printf("%d\\t", data);\n                }\n                System.out.println();\n            }\n            //将二维数组转化为稀疏数组\n            //1.先遍历二维数组，得到非0的数据的个数\n            int sum = 0;\n            for (int i = 0; i < 11; i++) {\n                for (int j = 0; j < 11; j++) {\n                    if (chessArr1[i][j] != 0) {\n                        sum++;\n                    }\n                }\n            }\n            System.out.println("二维数组中非0的数据个数 = " + sum);\n\n            //2.创建稀疏数组\n            int sparseArr2[][] = new int[sum + 1][3];\n            //给稀疏数组赋值\n            sparseArr2[0][0] = 11;\n            sparseArr2[0][1] = 11;\n            sparseArr2[0][2] = sum;\n            //遍历二维数组，将非0的值存入到sparseArr2中\n            int count = 0; //用于记录是第几个非0数据\n            for (int i = 0; i < 11; i++) {\n                for (int j = 0; j < 11; j++) {\n                    if (chessArr1[i][j] != 0) {\n                        count++;\n                        sparseArr2[count][0] = i;\n                        sparseArr2[count][1] = j;\n                        sparseArr2[count][2] = chessArr1[i][j];\n                    }\n                }\n            }\n            //打印稀疏数组\n            System.out.println();\n            System.out.println("稀疏数组为：");\n            for (int i = 0; i < sparseArr2.length; i++) {\n                System.out.printf("%d\\t%d\\t%d\\t\\n", sparseArr2[i][0], sparseArr2[i][1], sparseArr2[i][2]);\n            }\n            System.out.println();\n\n\n            // 稀疏数组存入文件中\n            File file = new File("E:\\\\a.txt");\n            FileOutputStream fileOutputStream = null;\n            try {\n                file.createNewFile();\n                fileOutputStream = new FileOutputStream(file);\n                StringBuilder stringBuilder = new StringBuilder();\n                for (int i = 0; i < sparseArr2.length; i++) {\n                    stringBuilder.append(sparseArr2[i][0] + "  " + sparseArr2[i][1] + "  " + sparseArr2[i][2] + "\\r\\n");\n                }\n                fileOutputStream.write(stringBuilder.toString().getBytes());\n            } catch (IOException e) {\n                e.printStackTrace();\n            } finally {\n                try {\n                    fileOutputStream.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n\n            System.out.println("从文件中读取的信息为：");\n            // 从文件中读取数组信息\n            FileReader fr = null;\n            BufferedReader br = null;\n            int[][] sparseArr3 = new int[4][3];\n\n            try {\n                //FileReader流的实例化\n                fr = new FileReader(file);\n                br = new BufferedReader(fr);\n\n                String string = "";\n                String[] arr1 = null;\n                int t = 0;\n\n                while ((string = br.readLine()) != null) {\n                    arr1 = string.split("  ");\n                    sparseArr3[t][0] = Integer.valueOf(arr1[0]);\n                    sparseArr3[t][1] = Integer.valueOf(arr1[1]);\n                    sparseArr3[t][2] = Integer.valueOf(arr1[2]);\n                    t++;\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            } finally {\n                // 流资源的关闭操作\n                try {\n                    if (br != null) {\n                        br.close();\n                    }\n                    if (fr != null) {\n                        fr.close();\n                    }\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            System.out.println("从文件读取的稀疏数组为：");\n            for (int i = 0; i < sparseArr3.length; i++) {\n                for (int j = 0; j < sparseArr3[0].length; j++) {\n                    System.out.print(sparseArr3[i][j] + "\\t");\n                }\n                System.out.println();\n            }\n\n            //将稀疏数组恢复为原始的二维数组\n            //1. 先读取稀疏数组的第一行，根据第一行的数据，创建原始的二维数组，比如上面的  chessArr2 = int [11][11]\n            //2. 再读取稀疏数组后几行的数据，并赋给 原始的二维数组 即可.\n            System.out.println("恢复为原始的二维数组为：");\n            //先读取稀疏数组的第一行，根据第一行的数据，创建原始的二维数组\n            int chessArr2[][] = new int[sparseArr3[0][0]][sparseArr3[0][1]];\n            //读取稀疏数组后几行的数据\n            for (int i = 1; i < sparseArr3.length; i++) {\n\n                chessArr2[sparseArr3[i][0]][sparseArr3[i][1]] = sparseArr3[i][2];\n            }\n            //输出恢复后的二维数组\n            for (int[] row : chessArr2) {\n                for (int data : row) {\n                    System.out.printf("%d\\t", data);\n                }\n                System.out.println();\n            }\n\n        }\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("123")]),n("br"),n("span",{staticClass:"line-number"},[s._v("124")]),n("br"),n("span",{staticClass:"line-number"},[s._v("125")]),n("br"),n("span",{staticClass:"line-number"},[s._v("126")]),n("br"),n("span",{staticClass:"line-number"},[s._v("127")]),n("br"),n("span",{staticClass:"line-number"},[s._v("128")]),n("br"),n("span",{staticClass:"line-number"},[s._v("129")]),n("br"),n("span",{staticClass:"line-number"},[s._v("130")]),n("br"),n("span",{staticClass:"line-number"},[s._v("131")]),n("br"),n("span",{staticClass:"line-number"},[s._v("132")]),n("br"),n("span",{staticClass:"line-number"},[s._v("133")]),n("br"),n("span",{staticClass:"line-number"},[s._v("134")]),n("br"),n("span",{staticClass:"line-number"},[s._v("135")]),n("br"),n("span",{staticClass:"line-number"},[s._v("136")]),n("br"),n("span",{staticClass:"line-number"},[s._v("137")]),n("br"),n("span",{staticClass:"line-number"},[s._v("138")]),n("br"),n("span",{staticClass:"line-number"},[s._v("139")]),n("br"),n("span",{staticClass:"line-number"},[s._v("140")]),n("br"),n("span",{staticClass:"line-number"},[s._v("141")]),n("br"),n("span",{staticClass:"line-number"},[s._v("142")]),n("br"),n("span",{staticClass:"line-number"},[s._v("143")]),n("br"),n("span",{staticClass:"line-number"},[s._v("144")]),n("br"),n("span",{staticClass:"line-number"},[s._v("145")]),n("br"),n("span",{staticClass:"line-number"},[s._v("146")]),n("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);