(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{407:function(n,s,a){"use strict";a.r(s);var e=a(7),t=Object(e.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"javascript-对象创建模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-对象创建模式"}},[n._v("#")]),n._v(" JavaScript 对象创建模式")]),n._v(" "),s("h2",{attrs:{id:"方式一-object-构造函数模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式一-object-构造函数模式"}},[n._v("#")]),n._v(" 方式一：Object 构造函数模式")]),n._v(" "),s("ul",[s("li",[s("p",[n._v("套路: 先创建空 Object 对象, 再动态添加属性/方法。")])]),n._v(" "),s("li",[s("p",[n._v("适用场景: 起始时不确定对象内部数据。")])]),n._v(" "),s("li",[s("p",[n._v("存在的问题: 需要书写的语句太多。")])])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('// 先创建空Object对象\nlet p = new Object();\np = {}; //此时内部数据是不确定的\n// 再动态添加属性/方法\np.name = "Tom";\np.age = 12;\np.setName = function (name) {\n  this.name = name;\n};\n\n//测试\nconsole.log(p.name, p.age);\np.setName("Bob");\nconsole.log(p.name, p.age);\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br")])]),s("h2",{attrs:{id:"方式二-对象字面量模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式二-对象字面量模式"}},[n._v("#")]),n._v(" 方式二：对象字面量模式")]),n._v(" "),s("ul",[s("li",[s("p",[n._v("套路: 使用{}创建对象, 同时指定属性/方法。")])]),n._v(" "),s("li",[s("p",[n._v("适用场景: 起始时对象内部数据是确定的。")])]),n._v(" "),s("li",[s("p",[n._v("存在问题: 如果创建多个对象, 会出现大量重复代码。")])])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('let p = {\n    name: "Tom",\n    age: 12,\n    setName: function (name) {\n        this.name = name;\n    },\n};\n\n    //测试\n    console.log(p.name, p.age);\n    p.setName("JACK");\n    console.log(p.name, p.age);\n\nlet p2 = {\n    //如果创建多个对象代码很重复\n    name: "Bob",\n    age: 13,\n    setName: function (name) {\n        this.name = name;\n    },\n};\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br")])]),s("h2",{attrs:{id:"方式三-工厂模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式三-工厂模式"}},[n._v("#")]),n._v(" 方式三：工厂模式")]),n._v(" "),s("ul",[s("li",[s("p",[n._v("套路: 通过工厂函数动态创建对象并返回")])]),n._v(" "),s("li",[s("p",[n._v("适用场景: 需要创建多个对象")])]),n._v(" "),s("li",[s("p",[n._v("问题: 对象没有一个具体的类型, 都是 Object 类型")])])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('function createPerson(name, age) {\n    //返回一个对象的函数 ===> 均可以称为工厂函数\n    let obj = {\n        name: name,\n        age: age,\n        setName: function (name) {\n        this.name = name;\n        },\n    };\n\n    return obj;\n}\n\n    // 创建2个人\n    let p1 = createPerson("小红", 25);\n    let p2 = createPerson("小明", 36);\n\n    // p1/p2是Object类型\n\n    function createStudent(name, price) {\n        let obj = {\n            name: name,\n            price: price,\n        };\n        return obj;\n    }\n    let s = createStudent("校长", 12000);\n    // s也是Object\n    console.log("p1 instanceof Object", p1 instanceof Object);\n    console.log("p2 instanceof Object", p2 instanceof Object);\n    console.log("s instanceof Object", s instanceof Object);\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br")])]),s("h2",{attrs:{id:"方式四-自定义构造函数模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式四-自定义构造函数模式"}},[n._v("#")]),n._v(" 方式四：自定义构造函数模式")]),n._v(" "),s("ul",[s("li",[s("p",[n._v("套路: 自定义构造函数, 通过 new 创建对象")])]),n._v(" "),s("li",[s("p",[n._v("适用场景: 需要创建多个类型确定的对象")])]),n._v(" "),s("li",[s("p",[n._v("问题: 每个对象都有相同的数据(方法), 浪费内存")])])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('//定义类型\nfunction Person(name, age) {\n    this.name = name;\n    this.age = age;\n    this.setName = function (name) {\n        this.name = name;\n    };\n}\n    let p1 = new Person("Tom", 12);\n    p1.setName("Jack");\n    console.log(p1.name, p1.age);\n    console.log(p1 instanceof Person);\n\nfunction Student(name, price) {\n    this.name = name;\n    this.price = price;\n}\n    let s = new Student("Bob", 13000);\n    console.log(s instanceof Student);\n\n    let p2 = new Person("ali", 23);\n    console.log(p1, p2);\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br")])]),s("h2",{attrs:{id:"方式五-构造函数-原型的组合模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式五-构造函数-原型的组合模式"}},[n._v("#")]),n._v(" 方式五: 构造函数+原型的组合模式")]),n._v(" "),s("ul",[s("li",[s("p",[n._v("套路: 自定义构造函数, 属性在函数中初始化, 方法添加到原型上")])]),n._v(" "),s("li",[s("p",[n._v("适用场景: 需要创建多个类型确定的对象")])])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('function Person(name, age) {\n    //在构造函数中只初始化一般函数\n    this.name = name;\n    this.age = age;\n}\n    Person.prototype.setName = function (name) {\n    this.name = name;\n    };\n\n    let p1 = new Person("Tom", 23);\n    let p2 = new Person("Jack", 24);\n    console.log(p1, p2);\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br")])]),s("p",[s("strong",[n._v("注意：这几种对象创建模式并没有具体的优劣之分，应根据自己的实际需求选择适合自己的对象创建模式。")])])])}),[],!1,null,null,null);s.default=t.exports}}]);