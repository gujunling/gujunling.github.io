(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{441:function(e,a,o){"use strict";o.r(a);var t=o(7),n=Object(t.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"java-中日志框架的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-中日志框架的使用"}},[e._v("#")]),e._v(" Java 中日志框架的使用")]),e._v(" "),a("h2",{attrs:{id:"日志定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志定义"}},[e._v("#")]),e._v(" 日志定义：")]),e._v(" "),a("p",[e._v("在计算机领域，日志文件（logfile）是一个记录了发生在运行中的操作系统或其他软件中的事件的文件，或者记录了在网络聊天软件的用户之间发送的消息。")]),e._v(" "),a("p",[e._v("日志记录（Logging）：是指保存日志的行为。最简单的做法是将日志写入单个存放日志的文件。")]),e._v(" "),a("p",[e._v("日志级别优先级：")]),e._v(" "),a("p",[a("code",[e._v("ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF")])]),e._v(" "),a("h2",{attrs:{id:"日志框架的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志框架的作用"}},[e._v("#")]),e._v(" 日志框架的作用：")]),e._v(" "),a("p",[e._v("①：跟踪用户对系统访问，记录了系统行为的时间、地点、状态等相关信息，能够帮助我们了解并监控系统状态")]),e._v(" "),a("p",[e._v("②：进行统计")]),e._v(" "),a("p",[e._v("③：进行 Debug，在系统产生问题时，能够帮助我们快速的定位、诊断并解决问题。")]),e._v(" "),a("p",[e._v("在发生错误或者接近某种危险状态时能够及时提醒我们处理")]),e._v(" "),a("h2",{attrs:{id:"常用的日志框架类别简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用的日志框架类别简介"}},[e._v("#")]),e._v(" 常用的日志框架类别简介：")]),e._v(" "),a("p",[a("strong",[e._v("Log4j")]),e._v(" Apache Log4j 是一个基于 Java 的日志记录工具。它是由"),a("code",[e._v("Ceki Gülcü")]),e._v("首创的，现在则是 Apache 软件基金会的一个项目。 Log4j 是几种 Java 日志框架之一。")]),e._v(" "),a("p",[a("strong",[e._v("Log4j 2")]),e._v(" Apache Log4j 2 是 apache 开发的一款 Log4j 的升级产品，Log4j 被 apache 收购，升级，改为 log4j2，框架改动很大，只是借用之名。")]),e._v(" "),a("p",[a("strong",[e._v("JCL （Jakarta Commons Logging）")]),e._v(" Apache 基金会所属的项目，是一套 Java 日志接口，之前叫 Jakarta Commons Logging，后更名为 Commons Logging。")]),e._v(" "),a("p",[a("strong",[e._v("Slf4j（Simple Logging Facade for Java）")]),e._v(" 类似于 Commons Logging，是一套简易 Java 日志门面，本身并无日志的实现。")]),e._v(" "),a("p",[a("strong",[e._v("Logback")]),e._v(" 一套日志组件的实现(slf4j 阵营)。")]),e._v(" "),a("p",[a("strong",[e._v("JUL")]),e._v(" (Java Util Logging),自 Java1.4 以来的官方日志实现，已被淘汰。")]),e._v(" "),a("p",[a("strong",[e._v("jboss-logging")]),e._v(" 等。")]),e._v(" "),a("p",[e._v("Spring 框架内部使用的日志框架是 "),a("code",[e._v("JCL (Jakarta Commons Logging)")])]),e._v(" "),a("p",[e._v("Mybatis 框架中使用的是 "),a("code",[e._v("Log4j")])]),e._v(" "),a("p",[e._v("Hibernate 框架中使用的是 "),a("code",[e._v("jboss-logging")])]),e._v(" "),a("p",[e._v("Springboot 底层使用的是 "),a("code",[e._v("SLF4j + Logback")])]),e._v(" "),a("p",[e._v("（Log4j，Logback，SLF4j 都是同一个作者。）")]),e._v(" "),a("h2",{attrs:{id:"问题引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题引入"}},[e._v("#")]),e._v(" 问题引入：")]),e._v(" "),a("p",[e._v("市场上存在非常多的日志框架。每一种日志框架都有自己单独的 API，要使用对应的框架就要使用其对应的 API，这就大大的增加应用程序代码对于日志框架的耦合性。")]),e._v(" "),a("h2",{attrs:{id:"解决思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决思路"}},[e._v("#")]),e._v(" 解决思路：")]),e._v(" "),a("p",[e._v("为了解决上述问题，就在日志框架和应用程序之间架设一个沟通的桥梁，对于应用程序来说，无论底层的日志框架如何变，都不需要有任何感知。只要门面服务做的足够好，随意换另外一个日志框架，应用程序不需要修改任意一行代码，就可以直接上线。")]),e._v(" "),a("p",[e._v("在软件开发领域有这样一句话：计算机科学领域的任何问题都可以通过增加一个间接的中间层来解决。而门面模式就是对于这句话的典型实践。")]),e._v(" "),a("p",[a("code",[e._v("Logback")]),e._v("文档免费。"),a("code",[e._v("Logback")]),e._v("的所有文档是全面免费提供的，不象 Log4J 那样只提供部分免费文档而需要用户去购买付费文档。Logback 拥有更好的性能。")]),e._v(" "),a("p",[e._v("因为"),a("code",[e._v("springboot")]),e._v("底层使用的是 "),a("code",[e._v("SLF4j + Logback")]),e._v("，而且平时开发中使用频率最高的也是此组合，所以选择使用此组合进行日志框架的整合。")]),e._v(" "),a("h2",{attrs:{id:"可能出现的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可能出现的问题"}},[e._v("#")]),e._v(" 可能出现的问题：")]),e._v(" "),a("p",[e._v("如果我们直接暴力的排除其他日志框架，可能导致第三方库在调用日志接口时抛出 ClassNotFound 异常，这里就需要用到"),a("strong",[e._v("中间转换包")]),e._v("。")]),e._v(" "),a("p",[a("strong",[e._v("中间转换包")]),e._v("说白了就是一种偷天换日的解决方案。比如 "),a("code",[e._v("log4j-over-slf4j")]),e._v("，即 log4j -> slf4j 的转换包，这个库定义了与 log4j 一致的接口（包名、类名、方法签名均一致），但是接口的实现却是对 slf4j 日志接口的包装，即间接调用了 slf4j 日志接口，实现了对日志的转发。")]),e._v(" "),a("h2",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[e._v("#")]),e._v(" 解决方案：")]),e._v(" "),a("p",[e._v("①：先排除其他日志包")]),e._v(" "),a("p",[e._v("②：在项目中引入 "),a("code",[e._v("slf4j")]),e._v(" 的 转换包")]),e._v(" "),a("p",[e._v("③：在项目中引入 "),a("code",[e._v("slf4j+logback")]),e._v(" 依赖 + "),a("code",[e._v("logback")]),e._v("的配置文件")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("\x3c!--在项目中引入 slf4j的 转换包--\x3e\n\x3c!-- https://mvnrepository.com/artifact/org.slf4j/log4j-over-slf4j --\x3e\n<dependency>\n\t<groupId>org.slf4j</groupId>\n\t<artifactId>log4j-over-slf4j</artifactId>\x3c!-- 替换log4j --\x3e\n\t<version>1.7.25</version>\n</dependency>\n\n<dependency>\n\t<groupId>org.slf4j</groupId>\n\t<artifactId>jcl-over-slf4j</artifactId>\x3c!-- 替换commons-logging --\x3e\n\t<version>1.7.25</version>\n</dependency>\n<dependency>\n\t<groupId>org.slf4j</groupId>\n\t<artifactId>jul-to-slf4j</artifactId>\x3c!-- 替换java.util.logging --\x3e\n\t<version>1.7.25</version>\n</dependency>\n\n\t\x3c!--在项目中引入 slf4j+logback 依赖--\x3e\n <dependency>\n          <groupId>org.slf4j</groupId>\n          <artifactId>slf4j-log4j12</artifactId>\n          <version>1.7.6</version>\n       </dependency>\n       <dependency>\n          <groupId>org.slf4j</groupId>\n          <artifactId>slf4j-api</artifactId>\n          <version>1.7.6</version>\n       </dependency>\n<dependency>\n\t\t<groupId>ch.qos.logback</groupId>\n\t\t<artifactId>logback-classic</artifactId>\n\t\t<version>1.2.3</version>\n </dependency>\n")])])]),a("p",[a("code",[e._v("logback.xml")]),e._v("配置文件")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v('< ?xml version="1.0" encoding="UTF-8"?>\n<configuration>\n\t   <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">\n\t\t<encoder>\n\t\t\t<pattern>%-4relative [%thread] %-5level %logger{35} - %msg %n</pattern>\n\t\t</encoder>\n\t   </appender>\n\t   <root level="WARN">\n\t<appender-ref ref="STDOUT" />\n</root>\n\x3c!-- 日志：从低到高；只会打印指定级别以后的; additivity表示是否将日志信息反馈给root\n DEBUG==》INFO===》WARN===》ERROR\n\tAdditivity：false ,避免重复打印日志\n --\x3e\n \x3c!-- 在自己的项目在中设置打印日志的级别，开发时使用--\x3e\n <logger name="com.xxx.xxx" level="DEBUG" additivity="false">\n     <appender-ref ref="STDOUT"/>\n </logger>\n </configuration>\n')])])]),a("h2",{attrs:{id:"参考链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[e._v("#")]),e._v(" 参考链接：")]),e._v(" "),a("p",[a("a",{attrs:{href:"http://www.slf4j.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("slf4j 官网"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://www.slf4j.org/manual.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("slf4j 使用手册"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://logback.qos.ch/",target:"_blank",rel:"noopener noreferrer"}},[e._v("logback 官网"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://commons.apache.org/proper/commons-logging/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Commons Logging 官网"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);